select(-column)
colnames(data0)
# Chunk 1: setup
knitr::opts_chunk$set(tidy=FALSE,
echo = TRUE,
cache = FALSE,
message=FALSE,
warning=FALSE,
fig.align='center',
fig.width = 16)
knitr::opts_knit$set(progress = TRUE, verbose = TRUE)
library(tidyverse)
library(magick)
library(here)
library(gt)
library(shiny)
library(shinyFiles)
here::i_am("index.Rmd")
# Chunk 2
data0 <- cluster::plantTraits %>%
sample_n(10) %>%
select(lign, leafy, suman, everalw, windgl)
### make test csv file to be used later with shinny app
tempdata0 <- data0 %>%
add_column("Species" = as.character(seq(1:nrow(data0))), .before = "lign")
write_csv(tempdata0, here("plantTraitsSubset.csv"))
# Chunk 3
dir.create(here('elements'), showWarnings = FALSE)
urls <- 'https://fonts.gstatic.com/s/i/short-term/release/materialsymbolsoutlined/'
icons <- data.frame(urls=paste0(urls, c("check_circle","cancel"),"/default/48px.svg"),
svgs = here('elements', paste0(c("1","0"),".svg")),
code = c("Present","Absent"))
walk2(icons$urls, icons$svgs, safely(~ download.file(.x , .y, mode = "wb")))
# Chunk 4
present <- image_colorize(image_read_svg(icons$svgs[1]), 100, '#93c47d')
absent <- image_colorize(image_read_svg(icons$svgs[2]), 100, '#EA9999')
image_write(present,  path = icons$svgs[1], format = "svg")
image_write(absent, path = icons$svgs[2], format = "svg")
image_write(image_colorize(present, 100, 'white'),
path = here('elements',"NA.svg"), format = "svg")
## show colored icons
image_append(c(present, absent))
# Chunk 5
icons <- data.frame(icons = list.files(here('elements'), full.names = TRUE, pattern = '.svg')) %>%
mutate(value = basename(tools::file_path_sans_ext(icons)))
data <- data0 %>%
rownames_to_column('Species') %>%
pivot_longer(-Species, values_ptypes = as.character()) %>%
replace_na(list(value = "NA")) %>%
left_join(icons, by = 'value') %>%
select(-value) %>%
pivot_wider(names_from = name, values_from = icons)
# Chunk 6
gt(data) %>%
tab_header(
title = md("Subsample of plants traits dataset")) %>%
opt_table_font(font = list(google_font("Mina"), default_fonts())) %>%
cols_label(lign = 'Woody plant', leafy = 'Leafy plant',
suman = 'Summer annual',everalw = 'Leaves always evergreen',
windgl = 'Wind dispersed fruits') %>%
text_transform(locations = cells_body(columns = 2:ncol(data), rows = everything()),
fn = function(x) { map_chr(x, ~ local_image(filename = .x,
height = 24))}) %>%
tab_source_note(
source_note = md("**Source:** Data from plantTraits of the Cluster package.")) %>%
cols_align(
align = "center",
columns = everything()) %>%
cols_width(everything() ~ px(70))  %>%
tab_style(style = list(cell_text(weight = "bold")),
locations = list(cells_body(columns = Species,
rows = everything()),
cells_column_labels(columns = everything()))) %>%
tab_options(data_row.padding = px(0),
data_row.padding.horizontal = px(0),
table.font.size = px(14),
heading.align = 'center',
table.border.top.style = "hidden",
table.border.bottom.style = "hidden",
table_body.hlines.style = "hidden",
table.background.color = "#FFFFFF00")
# Chunk 7
icons <- data.frame(icons = list.files(here('elements'), full.names = TRUE,
pattern = '.svg')) %>%
mutate(columns = basename(tools::file_path_sans_ext(icons))) %>%
filter(str_detect(columns, "_")) %>%
separate(columns, into = c("column","content"), sep = "_", extra = "drop")
# prepare column header
colData <- data.frame(content = c('Species',colnames(data0))) %>%
left_join(filter(icons, column %in% 'header'), by = "content") %>%
pivot_wider(names_from = content, values_from = icons) %>%
select(-column)
# prepare row header
rowData <- data.frame(content = as.character(seq(1:nrow(data0)))) %>%
left_join(filter(icons, column %in% 'Species'), by = "content") %>%
rename(Species = icons) %>%
select(-column, -content)
# prepare content
data1 <- data0 %>%
mutate(row = row_number()) %>%
pivot_longer(cols = -row, names_to = "column", values_to = "content",
values_ptypes = as.character()) %>%
replace_na(list(content = "NA")) %>%
left_join(select(filter(icons, column %in% 'content'),-column),
by = 'content') %>%
pivot_wider(id_cols = row, names_from = column, values_from = icons) %>%
select(-row)
dataIcons <- colData %>%
bind_rows(cbind(rowData, data1))
# Chunk 8
gt(dataIcons) %>%
tab_header(
title = md("Subsample of plants traits dataset")) %>%
opt_table_font(font = list(google_font("Mina"), default_fonts())) %>%
text_transform(locations = cells_body(columns = everything(), rows = everything()),
fn = function(x) { map_chr(x, ~ local_image(filename = .x,
height = 50))}) %>%
tab_source_note(
source_note = md("**Source:** Data from plantTraits of the Cluster package.")) %>%
cols_align(
align = "center",
columns = everything()) %>%
tab_options(data_row.padding = px(0),
data_row.padding.horizontal = px(0),
table.font.size = px(14),
heading.align = 'center',
column_labels.hidden = TRUE, ## remove header without icons paths
table.border.top.style = "hidden",
table.border.bottom.style = "hidden",
table_body.hlines.style = "hidden")
shinyAppDir(
here(),
options = list(width = "100%", height = 800)
)
shinyAppDir(
here('app.R'),
options = list(width = "100%", height = 800)
)
?shinyAppDir
shinyAppFile(
here('app.R'),
options = list(width = "100%", height = 800)
)
?knit
knit('/Users/acas/Dropbox/GitHub/R_tables_graphicExamples/docs/index.Rmd')
library(knitr)
knit('/Users/acas/Dropbox/GitHub/R_tables_graphicExamples/docs/index.Rmd')
knit('/Users/acas/Dropbox/GitHub/R_tables_graphicExamples/docs/index.Rmd')
getwd()
setwd("/Users/acas/Dropbox/GitHub/R_tables_graphicExamples/docs")
knit('/Users/acas/Dropbox/GitHub/R_tables_graphicExamples/docs/index.Rmd')
knit('/Users/acas/Dropbox/GitHub/R_tables_graphicExamples/docs/index.Rmd')
knit('/Users/acas/Dropbox/GitHub/R_tables_graphicExamples/docs/index.Rmd')
knit('/Users/acas/Dropbox/GitHub/R_tables_graphicExamples/docs/index.Rmd')
knit('/Users/acas/Dropbox/GitHub/R_tables_graphicExamples/docs/index.Rmd')
install.packages('networkD3')
runApp('~/Library/CloudStorage/GoogleDrive-anacatarina.as@gmail.com/.shortcut-targets-by-id/10AF0bSdaj74fS21MmV7aZf-Zt1occzGH/Studios - Paid Projects/2022.06 CAT Masterfiles Tinkering/3_R-code/perCountry_climateFinance_shinyApp/climateFinance_shinyApp.R')
library(shiny)
library(shinyFiles)
library(tidyverse)
library(readxl)
library(R3port)
library(gt)
library(psycModel)
library(lubridate)
input_dataset <- read_excel('/Users/acas/Library/CloudStorage/GoogleDrive-anacatarina.as@gmail.com/.shortcut-targets-by-id/10AF0bSdaj74fS21MmV7aZf-Zt1occzGH/Studios\ -\ Paid\ Projects/2022.06\ CAT\ Masterfiles\ Tinkering/1_CAT-Box-ExcelDataInputs/1_OriginalCATdataFiles/CAT_ClimateFinance.xlsx',
sheet = "ClimateFinance-Subratings", na = "NA",
col_types = 'text')
runApp('~/Library/CloudStorage/GoogleDrive-anacatarina.as@gmail.com/.shortcut-targets-by-id/10AF0bSdaj74fS21MmV7aZf-Zt1occzGH/Studios - Paid Projects/2022.06 CAT Masterfiles Tinkering/3_R-code/perCountry_climateFinance_shinyApp/climateFinance_shinyApp.R')
?inputPanel
?here
?parseDirPath
?shinyDirButton
# Chunk 1: setup
knitr::opts_chunk$set(tidy=FALSE,
echo = FALSE,
cache = FALSE,
message=FALSE,
warning=FALSE)
knitr::opts_knit$set(progress = TRUE, verbose = TRUE)
### 1.To run this app you will need to run the following code without the # before:
# install.packages("remotes")
# library(remotes)
# install_version("tidyverse", "1.3.1")
# install_version("readxl", "1.4.0")
# install_version("gt", "0.6.0")
# install_version("shiny","1.7.1")
# install_version("psycModel","0.4.0.9000")
# install_version("R3port","0.2.4")
# install_version("webshot", "0.5.3")
# install_version("here","1.0.1")
# library(webshot)
# webshot::install_phantomjs()
library(shiny)
library(shinyFiles)
library(tidyverse)
library(readxl)
library(R3port)
library(gt)
library(psycModel)
library(lubridate)
library(here)
here::i_am("climateFinance.Rmd")
# Chunk 2
titlePanel("Producing Climate Finance tables")
# Sidebar with two input widgets
sidebarLayout(
sidebarPanel(
p("1. Select folder with design elements from illustrator"),
p("eg. /2_R-GraphicElements/CATRatings-ClimateFinanceSubratings/R_DesignElements"),
p(""),
shinyDirButton(id = "iconsFolder", label = "Select icons",
title = "Select directory with icons"), ### to add Icons
p(""),
p("2. Upload climate finance file"),
p("eg. /1_CAT-Box-ExcelDataInputs/1_OriginalCATdataFiles/CAT_ClimateFinance.xlsx"),
fileInput(inputId = "dataset",
label = "Find excel file", accept = c(".xlsx")),       ### to add dataset
p("3. Choose the Country to export"),
selectInput(inputId = "countryVariable", label = "Select Country", choices = NULL),
p("4. Write date label"),
textInput("date", "Date", "Sept 2022")),       ### to add selected country
mainPanel(gt_output(outputId = "climateFinanceRatings1"),
gt_output(outputId = "climateFinanceRatings2"))
)
wellPanel(  ## 3 exporting steps
p("Export temporary files anywhere inside defined path in the script"),
p("4. Export top half of table"),
downloadButton("download1", "Download top"),
p(""),
p(""),
p("5. Export bottom half of table"),
downloadButton("download2", "Download bottom"),
p(""),
p(""),
p("6. Export merged table as pdf (eg. 4_R-exported/3-ClimateFinance/)"),
downloadButton("downloadFinal", "Download final.pdf"))
# Chunk 3
## select folder with design elements
volumes = c(wd=here())
shinyDirChoose(input, 'iconsFolder', roots = volumes,
filetypes = 'svg')
### not sure why but this is required so the folder with the icons is used
# global <- reactiveValues(datapath = getwd())
# dir <- reactive(input$iconsFolder)
# observeEvent(ignoreNULL = TRUE, eventExpr = {input$iconsFolder},
#              handlerExpr = {
#                if (!"path" %in% names(dir())) return()
#                home <- normalizePath(path)
#                global$datapath <-file.path(home, paste(unlist(dir()$path[-1]),
#                                                        collapse = .Platform$file.sep))})
icons0 <- reactive({
data.frame(icons = list.files(parseDirPath(volumes, input$iconsFolder),
pattern = "svg", full.names = TRUE)) %>%
mutate(columns = basename(tools::file_path_sans_ext(icons))) %>%
separate(columns, into = c("column","content"), sep = "_", extra = "drop",
remove = TRUE, fill = 'left')
})
## read data input file and makes it a reactive element
input_dataset <- reactive({
req(input$dataset)
read_excel(input$dataset$datapath,
sheet = "ClimateFinance-Subratings", na = "NA",
col_types = 'text')
})
## updates the countryVariable in such a way the options are in the first column of the data file
observeEvent(input$dataset, {
freezeReactiveValue(input, "countryVariable")
updateSelectInput(session = session, inputId = "countryVariable", choices = pull(input_dataset(),1))
})
output$country <- renderText({
print(input$countryVariable)
})
################################
## renders the first gt table ##
################################
data1 <- reactive({
if (is.null(input_dataset)) {
return(NULL)}
# countries <- read.delim('countryNames.txt') %>%
#   select(ISO, full) %>%
#   rename(Country = 'full')
icons <- icons0()
data <- input_dataset()
data0 <- data %>%
rename(Current = 'Absolute contributions',
Trend = 'Historic trend',	Future = 'Future commitments',
Overseas = 'Overseas finance', Overall =	'Overall rating') %>%
# select(-Country) %>%
# left_join(countries) %>%
filter(!is.na(Overall)) %>%
replace(is.na(.), 'NA') %>%
relocate(c(Country,Overall,Trend,Future,Current), .after = ISO) %>%
select(-ISO)
data1 <- data0 %>%
# select(-Country) %>%
pivot_longer(cols = -Country,
names_to = 'columns', values_to = 'content')  %>%
left_join(icons, by = c("columns", "content")) %>%
select(-content)
tb01 <- data1 %>%
filter(Country %in% input$countryVariable, ##### <-
columns %in% c('Overall','Current')) %>%
select(icons)
tb1 <- tb01 %>%
gt() %>%
opt_table_font(font = list(google_font("Ubuntu"), default_fonts())) %>%
text_transform(locations = cells_body(columns = 1, rows = 1),
fn = function(x) { map_chr(x, ~ local_image(filename = .x,
height = 30))}) %>%
text_transform(locations = cells_body(columns = 1, rows = 2),
fn = function(x) { map_chr(x, ~ local_image(filename = .x,
height = 22))}) %>%
cols_align(align = "center", columns = everything()) %>%  # column headers in the center
tab_options(  column_labels.hidden = TRUE,
table.font.size = 9,
data_row.padding = px(3), #3
data_row.padding.horizontal = px(1),
table.border.top.style = "hidden",
table_body.border.top.style = "hidden",
table_body.border.bottom.style = "hidden",
table_body.hlines.color = "white",
table.border.bottom.style = "hidden",
table.background.color = "transparent"
) %>%
tab_header(title = paste(input$countryVariable, 'Climate Finance rating')) %>%
tab_style(style = cell_text(v_align="middle",  weight = 'bold',
color =  "#4F8EB5", transform = "uppercase"),
locations = cells_title())
})
output$climateFinanceRatings1 <- render_gt({
data1()
})
# Chunk 4
#################################
## renders the second gt table ##
#################################
date_stamp0 <- reactive({input$date})
data2 <- reactive({
if (is.null(input_dataset)) {
return(NULL)}
# date_stamp <- lubridate::stamp("Jan 2000", orders = '"%Ob %Y"(1)', quiet = TRUE)
# countries <- read.delim('countryNames.txt') %>%
#   select(ISO, full) %>%
#   rename(Country = 'full')
date_stamp <- date_stamp0()
icons <- icons0()
data <- input_dataset()
data0 <- data %>%
rename(Current = 'Absolute contributions',
Trend = 'Historic trend',	Future = 'Future commitments',
Overseas = 'Overseas finance', Overall =	'Overall rating') %>%
# select(-Country) %>%
# left_join(countries) %>%
filter(!is.na(Overall)) %>%
replace(is.na(.), 'NA') %>%
relocate(c(Country,Overall,Trend,Future,Current), .after = ISO) %>%
select(-ISO)
data2 <- data0 %>%
# select(-Country) %>%
pivot_longer(cols = -Country, names_to = 'columns', values_to = 'content')  %>%
left_join(icons,by = c("columns", "content")) %>%
select(-content)
tb02 <- data2 %>%
filter(Country %in% input$countryVariable,
columns %in% c('Trend','Future','Overseas')) %>%
pivot_wider(names_from = columns, values_from = icons) %>%
select(-Country)
tb2 <- tb02 %>%
replace(is.na(.), '') %>%
add_row(Trend = 'climateactiontracker.org',
Future = '',
Overseas = paste(date_stamp,'Update')) %>%
gt() %>%
opt_table_font(font = list(google_font("Ubuntu"), default_fonts())) %>%
text_transform(locations = cells_body(columns = which(!is.na(tb02[1,])), rows = 1),
fn = function(x) { map_chr(x, ~ local_image(filename = .x,
height = 22))}) %>%
cols_align(align = "center", columns = everything()) %>%  # column headers in the center
tab_options(  column_labels.hidden = TRUE,
table.font.size = 4,
data_row.padding = px(4), #4
data_row.padding.horizontal = px(4),
table.border.top.style = "hidden",
table_body.border.top.style = "hidden",
# table_body.border.bottom.style = "hidden",
table_body.hlines.color = "white",
table.border.bottom.style = "hidden", ### problem only solved with extra last row
# column_labels.border.bottom.style = "hidden",
table.background.color = 'transparent') %>%
tab_style(style = cell_text(v_align="top", align="left", size = 'x-small'),
locations = cells_body(columns = 1, rows = 2)) %>%
tab_style(style = cell_text(v_align="top", align="right", size = 'x-small'),
locations = cells_body(columns = 3, rows = 2)) %>%
tab_style(style = cell_borders(sides = c("left","bottom"), color = 'white',
weight = px(8), style = "solid"),
locations = cells_body(columns = 1, rows = 1)) %>%
tab_style(style = cell_borders(sides = c("bottom"), color = 'white',
weight = px(8), style = "solid"),
locations = cells_body(columns = 2, rows = 1)) %>%
tab_style(style = cell_borders(sides = c("right","bottom"), color = 'white',
weight = px(8), style = "solid"),
locations = cells_body(columns = 3, rows = 1))
})
output$climateFinanceRatings2 <- render_gt({
data2()
})
# Chunk 5
output$download1 <- downloadHandler(
filename = function() {
paste0(path, 'temp/tempTB-',input$countryVariable, "1.html")
} ,
content = function(file1) {
dir.create(paste0(path, 'temp/'), showWarnings = FALSE)
gtsave(data1(), file1)
}
)
output$download2 <- downloadHandler(
filename = function() {
paste0(path, 'temp/tempTB-',input$countryVariable, "2.html")
} ,
content = function(file2) {
dir.create(paste0(path, 'temp/'), showWarnings = FALSE)
gtsave(data2(), file2)
}
)
output$downloadFinal <- downloadHandler(
filename = function() {
paste0('CAT_rExport_ClimateFinance-',input$countryVariable, ".pdf")
} ,
content = function(file) {
dir.create(paste0(path, 'temp/'), recursive = TRUE, showWarnings = FALSE)
pts <- list.files(path, recursive = TRUE, full.names = T, pattern = 'tempTB-')
file.rename(pts[[1]], paste0(path, 'temp/tb1.rawhtml'))
file.rename(pts[[2]], paste0(path, 'temp/tb2.rawhtml'))
tableHTML::make_css(list('html', 'height', '100%'),
list('body', c('margin', 'padding', 'font','height'),
c('10px', '0', '13px "Ubuntu", sans-serif', '100%')),
file = paste0(path, 'temp/style_manual.css'))
R3port::html_combine(combine = paste0(path, 'temp/'),
out = "test.html", toctheme = TRUE, clean = 2, show = FALSE,
css = paste0(path, 'temp/style_manual.css'))
psycModel::html_to_pdf(file_path = paste0(path, 'temp/test.html'))
file.rename(paste0(path, 'temp/test.pdf'), file)
unlink(paste0(path, 'temp/'), recursive = TRUE)
}
)
here()
devtools::install_github("ewan-keith/shinyShortcut")
knit('/Users/acas/Dropbox/GitHub/R_tables_graphicExamples/docs/appTest.Rmd')
knit('/Users/acas/Dropbox/GitHub/R_tables_graphicExamples/docs/appTest.Rmd')
knit('/Users/acas/Dropbox/GitHub/R_tables_graphicExamples/docs/appTest.Rmd')
knit('/Users/acas/Dropbox/GitHub/R_tables_graphicExamples/docs/appTest.Rmd')
library(shinyShortcut)
shinyShortcut()
?shinyShortcut()
library(shinyShortcut)
shinyShortcut(here('docs/app.R'))
library(shinyShortcut)
shinyShortcut(here('app.R'))
library(shinyShortcut)
shinyShortcut(here())
runApp()
runApp()
runApp('~/Library/CloudStorage/GoogleDrive-anacatarina.as@gmail.com/.shortcut-targets-by-id/10AF0bSdaj74fS21MmV7aZf-Zt1occzGH/Studios - Paid Projects/2022.06 CAT Masterfiles Tinkering/3_R-code/perCountry_climateFinance_shinyApp/climateFinance_shinyApp.R')
runApp('~/Library/CloudStorage/GoogleDrive-anacatarina.as@gmail.com/.shortcut-targets-by-id/10AF0bSdaj74fS21MmV7aZf-Zt1occzGH/Studios - Paid Projects/2022.06 CAT Masterfiles Tinkering/3_R-code/perCountry_climateFinance_shinyApp/climateFinance_shinyApp.R')
runApp('~/Library/CloudStorage/GoogleDrive-anacatarina.as@gmail.com/.shortcut-targets-by-id/10AF0bSdaj74fS21MmV7aZf-Zt1occzGH/Studios - Paid Projects/2022.06 CAT Masterfiles Tinkering/3_R-code/perCountry_climateFinance_shinyApp/climateFinance_shinyApp.R')
runApp('~/Library/CloudStorage/GoogleDrive-anacatarina.as@gmail.com/.shortcut-targets-by-id/10AF0bSdaj74fS21MmV7aZf-Zt1occzGH/Studios - Paid Projects/2022.06 CAT Masterfiles Tinkering/3_R-code/perCountry_climateFinance_shinyApp/climateFinance_shinyApp.R')
runApp('~/Library/CloudStorage/GoogleDrive-anacatarina.as@gmail.com/.shortcut-targets-by-id/10AF0bSdaj74fS21MmV7aZf-Zt1occzGH/Studios - Paid Projects/2022.06 CAT Masterfiles Tinkering/3_R-code/perCountry_climateFinance_shinyApp/climateFinance_shinyApp.R')
runApp('~/Library/CloudStorage/GoogleDrive-anacatarina.as@gmail.com/.shortcut-targets-by-id/10AF0bSdaj74fS21MmV7aZf-Zt1occzGH/Studios - Paid Projects/2022.06 CAT Masterfiles Tinkering/3_R-code/perCountry_climateFinance_shinyApp/climateFinance_shinyApp.R')
getwd()
here()
runApp('~/Library/CloudStorage/GoogleDrive-anacatarina.as@gmail.com/.shortcut-targets-by-id/10AF0bSdaj74fS21MmV7aZf-Zt1occzGH/Studios - Paid Projects/2022.06 CAT Masterfiles Tinkering/3_R-code/perCountry_climateFinance_shinyApp/climateFinance_shinyApp.R')
runApp('~/Dropbox/GitHub/CAT_scripts/climateFinance_shinyApp.R')
runApp('~/Library/CloudStorage/GoogleDrive-anacatarina.as@gmail.com/.shortcut-targets-by-id/10AF0bSdaj74fS21MmV7aZf-Zt1occzGH/Studios - Paid Projects/2022.06 CAT Masterfiles Tinkering/3_R-code/perCountry_climateFinance_shinyApp/climateFinance_shinyApp.R')
?parseDirPath
setwd('/Users/acas/Library/CloudStorage/GoogleDrive-anacatarina.as@gmail.com/.shortcut-targets-by-id/10AF0bSdaj74fS21MmV7aZf-Zt1occzGH/Studios\ -\ Paid\ Projects/2022.06\ CAT\ Masterfiles\ Tinkering/3_R-code/perCountry_climateFinance_shinyApp/')
runApp('climateFinance_shinyApp.R')
here()
?here
install.packages("this.path")
runApp('~/Library/CloudStorage/Box-Box/CAT/11 Project support/01 Graphics resources/Graphics - Masterfiles/Climate Finance - Countries/2022.10/01 Working Files/shinyApp/climateFinance_shinyApp.R')
runApp('climateFinance_shinyApp.R')
runApp('climateFinance_shinyApp.R')
library(shiny)
runGist("8bc194f6f2fbc8106a6773d07831d2e0") #https://gist.github.com/acafonsosilva/8bc194f6f2fbc8106a6773d07831d2e0
?install_version
library(devtools)
library(shinyFiles)
?shinyFiles
library(R3port)
?R3port
library(psycModel)
?psycModel
??psycModel
install_version("psycModel","0.4.1")
runApp('~/Dropbox/DFC/climateFinance_shinyApp.R')
runApp('~/Library/CloudStorage/Box-Box/CAT/11 Project support/01 Graphics resources/Graphics - Masterfiles/Climate Finance - Countries/2022.10/01 Working Files/shinyApp/climateFinance_shinyApp.R')
runApp('~/Library/CloudStorage/Box-Box/CAT/11 Project support/01 Graphics resources/Graphics - Masterfiles/Climate Finance - Countries/2022.10/01 Working Files/shinyApp/climateFinance_shinyApp.R')
runApp('~/Library/CloudStorage/Box-Box/CAT/11 Project support/01 Graphics resources/Graphics - Masterfiles/Climate Finance - Countries/2022.10/01 Working Files/shinyApp/climateFinance_shinyApp.R')
?observeEvent
runApp('~/Library/CloudStorage/Box-Box/CAT/11 Project support/01 Graphics resources/Graphics - Masterfiles/Climate Finance - Countries/2022.10/01 Working Files/shinyApp/climateFinance_shinyApp.R')
runApp('~/Library/CloudStorage/Box-Box/CAT/11 Project support/01 Graphics resources/Graphics - Masterfiles/Climate Finance - Countries/2022.10/01 Working Files/shinyApp/climateFinance_shinyApp.R')
runApp('~/Dropbox/GitHub/R_tables_graphicExamples/app2')
runApp('~/Dropbox/GitHub/R_tables_graphicExamples/app2')
??wo_rev_21
remotes::install_github("Appsilon/shiny.react")
remotes::install_github("Appsilon/shiny.fluent")
shiny.fluent::runExample("dashboard")
remotes::install_github("Appsilon/shiny.router")
shiny.fluent::runExample("dashboard")
??tableHTML
